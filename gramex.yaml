# Generated by gramex init on 2018-07-02 by Jai <jaiprakash.siyyadri@gramener.com>. Please retain this line.
import:
  ui:
    path: $GRAMEXAPPS/ui/gramex.yaml    # Import the UI components
    YAMLURL: $YAMLURL/ui/               # ... at this URL

url:
  d3plots:
      pattern : /$YAMLURL/d3
      handler : FileHandler
      kwargs :
          path : $YAMLURL/d3.html
  svg-sample:
    pattern: /$YAMLURL/svg
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/svg_sample.html
  forms:
    pattern: /$YAMLURL/forms
    handler: FormHandler
    kwargs:
      url: $YAMLPATH/kiva_usecase/data/flags.csv
      

  g1/mapviewer:
    pattern: /$YAMLURL/g1maps
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/kiva_usecase/g1_map_viewer.html

  quickstart/home:
    pattern: /$YAMLURL/quickstart
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/kiva_usecase/home.html
  quickstart/data:
    pattern: /$YAMLURL/data
    handler: FormHandler
    kwargs: 
      url: $YAMLPATH/kiva_usecase/data/kiva_loans.csv

  quickstart/data-u1:
    pattern: /$YAMLURL/data-u1
    handler: FormHandler
    kwargs: 
      url: $YAMLPATH/kiva_usecase/data/kiva_loans.csv
      default:
        _limit: 1000
      function: data.dropna()
      modify: (data.groupby('country').mean().reset_index().sort_values(by='loan_amount',ascending = False))
      formats:
        barchart:
                # Create a format named barchart
          format: vegam  # use Vegam for a charting library.
          spec:          # configuration for the vegam chart
            fromjson:
              - {data: __DATA__} # Get the data returned by the formhandler
              # Bar chart
              - {apply: bar, x: country, y: loan_amount, color: country, order: loan_amount}
              # Apply styles
              - {apply: style, x_sort_op: sum, x_sort_field: loan_amount, x_sort_order: descending}
      headers:
        Content-Type: application/javascript
    cache:
      expiry: {duration: 3600}

  working_with_data:
    pattern: /$YAMLURL/tweets
    
    handler: FormHandler
    kwargs:
      url: $YAMLPATH/Working_with_data/data.json
  home: 
    pattern: /$YAMLURL/
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/Working_with_data/tweet_data.html

  login:
    pattern: /$YAMLURL/login
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/Working_with_data/login.html
  lodash_practise:
    pattern: /$YAMLURL/lodash
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/Working_with_data/lowdash_practises.html
  
  templates_practise:
    pattern: /$YAMLURL/templates
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/templates_practise/sample_template.html
  plotx:
    pattern: /$YAMLURL/plot
    handler: FormHandler
    kwargs:
      url: $YAMLPATH/form_handler_practise/data.csv
      formats: 
        barchart:
          format: seaborn
          chart: barplot
          ext: svg
          height: 400
          width: 300
          dpi: 48
          x: a
          y: b
          headers:
            Content-Type: 'image/png'     # Render as a PNG image
        vegam_barchart:           # Allows ?_format=barchart
          format: vegam
          spec:
            fromjson:
              - {data: __DATA__}
              - {apply: bar, x: a, y: b, color: b,stack: true}
              - {apply: style}
              
    

  form_h:
    pattern: /$YAMLURL/plotspage
    handler: FileHandler
    kwargs:
      path: $YAMLPATH/templates_practise/plots_page.html

app:
    browser: /                  # Open the home page when the app loads